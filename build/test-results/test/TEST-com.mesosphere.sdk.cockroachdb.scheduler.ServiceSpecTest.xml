<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.mesosphere.sdk.cockroachdb.scheduler.ServiceSpecTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2017-07-17T23:40:02" hostname="Mesospheres-MacBook-Pro.local" time="5.676">
  <properties/>
  <testcase name="testYmlBase" classname="com.mesosphere.sdk.cockroachdb.scheduler.ServiceSpecTest" time="5.676"/>
  <system-out><![CDATA[INFO  2017-07-17 16:40:02,435 [Test worker] com.mesosphere.sdk.cockroachdb.scheduler.ServiceSpecTest:getRawServiceSpec(74): Configured environment:
COCKROACH_HTTP_PORT=80
COCKROACH_PG_PORT=26257
CONFIG_TEMPLATE_PATH=/Users/bohu/Workspace/dcos-commons/frameworks/cockroachdb/src/main/dist
CONTAINER_HTTP_PORT=8123
CONTAINER_PG_PORT=26257
EXECUTOR_URI=
FRAMEWORK_NAME=cockroachdb
LIBMESOS_URI=
NODE_COUNT=2
NODE_CPUS=0.1
NODE_DISK=5000
NODE_DISK_TYPE=ROOT
NODE_MEM=512
PORT_API=8080
SIDE_COUNT=2
SIDE_CPUS=0.1
SIDE_DISK=5000
SIDE_DISK_TYPE=ROOT
SIDE_MEM=512
INFO  2017-07-17 16:40:02,980 [Test worker] com.mesosphere.sdk.specification.yaml.RawServiceSpec$Builder:build(64): Rendered ServiceSpec:
name: cockroachdb
scheduler:
  principal: 
pods:
  cockroachdb:
    count: 2
    uris:
      - 
      - 
    placement: 
    resource-sets:
      server-resources:
        cpus: 0.1
        memory: 512
        ports:
          http:
            port: 8123
            vip:
              prefix: http
              port: 80
          pg:
            port: 26257
            vip:
              prefix: pg
              port: 26257
        volume:
          path: "cockroach-data"
          type: ROOT
          size: 5000
      sidecar-resources:
        cpus: 0.1
        memory: 512
    tasks:
      node-init:
        goal: RUNNING
        resource-set: server-resources
        configs:
          start:
            template: "/Users/bohu/Workspace/dcos-commons/frameworks/cockroachdb/src/main/dist/start.sh.mustache"
            dest: "start.sh"
        cmd: "./bootstrap && \
              chmod +x $MESOS_SANDBOX/start.sh && \
              ln -s $MESOS_SANDBOX//cockroach cockroach && \
              $MESOS_SANDBOX/start.sh"
        readiness-check:
          cmd: "curl -sf localhost:$PORT_HTTP/_admin/v1/health >/dev/null 2>/dev/null"
          interval: 10
          delay: 5
          timeout: 300
        health-check:
          cmd: "curl -sf localhost:$PORT_HTTP/_admin/v1/health >/dev/null 2>/dev/null"
          interval: 120
          grace-period: 30
          max-consecutive-failures: 3
          timeout: 10
          delay: 0
        env:
          COCKROACH_VERSION: 
      node-join:
        goal: RUNNING
        resource-set: server-resources
        configs:
          join:
            template: "/Users/bohu/Workspace/dcos-commons/frameworks/cockroachdb/src/main/dist/join.sh.mustache"
            dest: "join.sh"
        cmd: "./bootstrap && \
              chmod +x $MESOS_SANDBOX/join.sh && \
              ln -s $MESOS_SANDBOX//cockroach cockroach && \
              $MESOS_SANDBOX/join.sh"
        readiness-check:
          cmd: "curl -sf localhost:$PORT_HTTP/_admin/v1/health >/dev/null 2>/dev/null"
          interval: 10
          delay: 5
          timeout: 300
        health-check:
          cmd: "curl -sf localhost:$PORT_HTTP/_admin/v1/health >/dev/null 2>/dev/null"
          interval: 120
          grace-period: 30
          max-consecutive-failures: 3
          timeout: 10
          delay: 0
        env:
          COCKROACH_VERSION: 
      metrics:
        goal: RUNNING
        resource-set: sidecar-resources
        cmd: "docker run \
              -e PORT_HTTP=8123 \
              -e STATSD_UDP_HOST=$STATSD_UDP_HOST \
              -e STATSD_UDP_PORT=$STATSD_UDP_PORT \
              -e PYTHONUNBUFFERED=1 \
              --network='host' \
              sammisthemannis/cockroach-statsd:1.1"
  admin:
    count: 2
    uris:
      - 
      - 
    resource-sets:
      admin-resources:
        cpus: 0.1
        memory: 512
        volume:
          path: "cockroach-backup"
          type: ROOT
          size: 5000
    tasks:
      backup:
        goal: FINISHED
        configs:
          aws:
            template: "/Users/bohu/Workspace/dcos-commons/frameworks/cockroachdb/src/main/dist/aws.sh.mustache"
            dest: "aws.sh"
        cmd: "./bootstrap --resolve=false && \
              chmod +x $MESOS_SANDBOX/aws.sh && \
              mkdir backup && \
              touch backup/$DATABASE_NAME.sql && \
              $MESOS_SANDBOX//cockroach dump $DATABASE_NAME --insecure \
              --host='pg.cockroachdb.l4lb.thisdcos.directory' > \
              backup/$DATABASE_NAME.sql && \
              $MESOS_SANDBOX/aws.sh s3 cp \
              backup/$DATABASE_NAME.sql \
              s3://$S3_BUCKET_NAME/$S3_DIR_PATH/$BACKUP_DIR/"
        resource-set: admin-resources
      restore:
        goal: FINISHED
        configs:
          aws:
            template: "/Users/bohu/Workspace/dcos-commons/frameworks/cockroachdb/src/main/dist/aws.sh.mustache"
            dest: "aws.sh"
        cmd: "./bootstrap && \
             chmod +x $MESOS_SANDBOX/aws.sh && \
             mkdir restore && \
             $MESOS_SANDBOX/aws.sh s3 cp \
             s3://$S3_BUCKET_NAME/$S3_DIR_PATH/$BACKUP_DIR/$DATABASE_NAME.sql \
             restore/ && \
             $MESOS_SANDBOX//cockroach sql --insecure \
             --execute=\"CREATE DATABASE IF NOT EXISTS $DATABASE_NAME\" \
             --host='pg.cockroachdb.l4lb.thisdcos.directory' && \
             $MESOS_SANDBOX//cockroach sql \
             --database=$DATABASE_NAME --insecure \
             --host='pg.cockroachdb.l4lb.thisdcos.directory' < \
             restore/$DATABASE_NAME.sql"
        resource-set: admin-resources
plans:
  deploy:
    strategy: serial
    phases:
      node-deploy:
        strategy: serial
        pod: cockroachdb
        steps:
          - 0: [[node-init], [metrics]]
          - default: [[node-join], [metrics]]
  replace:
    strategy: parallel
    phases:
      node-deploy:
        strategy: parallel
        pod: cockroachdb
        steps:
          - default: [[node-join], [metrics]]
  backup:
    strategy: serial
    phases:
      backup:
        strategy: serial
        pod: admin
        steps:
          - default: [[backup]]
  restore:
    strategy: serial
    phases:
      restore:
        strategy: serial
        pod: admin
        steps:
          - 0: [[restore]]
  update:
    strategy: serial
    phases:
      node-deploy:
        strategy: serial
        pod: cockroachdb
        steps:
          - default: [[node-join], [metrics]]

INFO  2017-07-17 16:40:03,650 [Test worker] org.hibernate.validator.internal.util.Version:<clinit>(30): HV000001: Hibernate Validator 5.3.2.Final
INFO  2017-07-17 16:40:07,162 [Test worker] com.mesosphere.sdk.cockroachdb.scheduler.ServiceSpecTest:getRawServiceSpec(74): Configured environment:
COCKROACH_HTTP_PORT=80
COCKROACH_PG_PORT=26257
CONFIG_TEMPLATE_PATH=/Users/bohu/Workspace/dcos-commons/frameworks/cockroachdb/src/main/dist
CONTAINER_HTTP_PORT=8123
CONTAINER_PG_PORT=26257
EXECUTOR_URI=
FRAMEWORK_NAME=cockroachdb
LIBMESOS_URI=
NODE_COUNT=2
NODE_CPUS=0.1
NODE_DISK=5000
NODE_DISK_TYPE=ROOT
NODE_MEM=512
PORT_API=8080
SIDE_COUNT=2
SIDE_CPUS=0.1
SIDE_DISK=5000
SIDE_DISK_TYPE=ROOT
SIDE_MEM=512
INFO  2017-07-17 16:40:07,167 [Test worker] com.mesosphere.sdk.specification.yaml.RawServiceSpec$Builder:build(64): Rendered ServiceSpec:
name: cockroachdb
scheduler:
  principal: 
pods:
  cockroachdb:
    count: 2
    uris:
      - 
      - 
    placement: 
    resource-sets:
      server-resources:
        cpus: 0.1
        memory: 512
        ports:
          http:
            port: 8123
            vip:
              prefix: http
              port: 80
          pg:
            port: 26257
            vip:
              prefix: pg
              port: 26257
        volume:
          path: "cockroach-data"
          type: ROOT
          size: 5000
      sidecar-resources:
        cpus: 0.1
        memory: 512
    tasks:
      node-init:
        goal: RUNNING
        resource-set: server-resources
        configs:
          start:
            template: "/Users/bohu/Workspace/dcos-commons/frameworks/cockroachdb/src/main/dist/start.sh.mustache"
            dest: "start.sh"
        cmd: "./bootstrap && \
              chmod +x $MESOS_SANDBOX/start.sh && \
              ln -s $MESOS_SANDBOX//cockroach cockroach && \
              $MESOS_SANDBOX/start.sh"
        readiness-check:
          cmd: "curl -sf localhost:$PORT_HTTP/_admin/v1/health >/dev/null 2>/dev/null"
          interval: 10
          delay: 5
          timeout: 300
        health-check:
          cmd: "curl -sf localhost:$PORT_HTTP/_admin/v1/health >/dev/null 2>/dev/null"
          interval: 120
          grace-period: 30
          max-consecutive-failures: 3
          timeout: 10
          delay: 0
        env:
          COCKROACH_VERSION: 
      node-join:
        goal: RUNNING
        resource-set: server-resources
        configs:
          join:
            template: "/Users/bohu/Workspace/dcos-commons/frameworks/cockroachdb/src/main/dist/join.sh.mustache"
            dest: "join.sh"
        cmd: "./bootstrap && \
              chmod +x $MESOS_SANDBOX/join.sh && \
              ln -s $MESOS_SANDBOX//cockroach cockroach && \
              $MESOS_SANDBOX/join.sh"
        readiness-check:
          cmd: "curl -sf localhost:$PORT_HTTP/_admin/v1/health >/dev/null 2>/dev/null"
          interval: 10
          delay: 5
          timeout: 300
        health-check:
          cmd: "curl -sf localhost:$PORT_HTTP/_admin/v1/health >/dev/null 2>/dev/null"
          interval: 120
          grace-period: 30
          max-consecutive-failures: 3
          timeout: 10
          delay: 0
        env:
          COCKROACH_VERSION: 
      metrics:
        goal: RUNNING
        resource-set: sidecar-resources
        cmd: "docker run \
              -e PORT_HTTP=8123 \
              -e STATSD_UDP_HOST=$STATSD_UDP_HOST \
              -e STATSD_UDP_PORT=$STATSD_UDP_PORT \
              -e PYTHONUNBUFFERED=1 \
              --network='host' \
              sammisthemannis/cockroach-statsd:1.1"
  admin:
    count: 2
    uris:
      - 
      - 
    resource-sets:
      admin-resources:
        cpus: 0.1
        memory: 512
        volume:
          path: "cockroach-backup"
          type: ROOT
          size: 5000
    tasks:
      backup:
        goal: FINISHED
        configs:
          aws:
            template: "/Users/bohu/Workspace/dcos-commons/frameworks/cockroachdb/src/main/dist/aws.sh.mustache"
            dest: "aws.sh"
        cmd: "./bootstrap --resolve=false && \
              chmod +x $MESOS_SANDBOX/aws.sh && \
              mkdir backup && \
              touch backup/$DATABASE_NAME.sql && \
              $MESOS_SANDBOX//cockroach dump $DATABASE_NAME --insecure \
              --host='pg.cockroachdb.l4lb.thisdcos.directory' > \
              backup/$DATABASE_NAME.sql && \
              $MESOS_SANDBOX/aws.sh s3 cp \
              backup/$DATABASE_NAME.sql \
              s3://$S3_BUCKET_NAME/$S3_DIR_PATH/$BACKUP_DIR/"
        resource-set: admin-resources
      restore:
        goal: FINISHED
        configs:
          aws:
            template: "/Users/bohu/Workspace/dcos-commons/frameworks/cockroachdb/src/main/dist/aws.sh.mustache"
            dest: "aws.sh"
        cmd: "./bootstrap && \
             chmod +x $MESOS_SANDBOX/aws.sh && \
             mkdir restore && \
             $MESOS_SANDBOX/aws.sh s3 cp \
             s3://$S3_BUCKET_NAME/$S3_DIR_PATH/$BACKUP_DIR/$DATABASE_NAME.sql \
             restore/ && \
             $MESOS_SANDBOX//cockroach sql --insecure \
             --execute=\"CREATE DATABASE IF NOT EXISTS $DATABASE_NAME\" \
             --host='pg.cockroachdb.l4lb.thisdcos.directory' && \
             $MESOS_SANDBOX//cockroach sql \
             --database=$DATABASE_NAME --insecure \
             --host='pg.cockroachdb.l4lb.thisdcos.directory' < \
             restore/$DATABASE_NAME.sql"
        resource-set: admin-resources
plans:
  deploy:
    strategy: serial
    phases:
      node-deploy:
        strategy: serial
        pod: cockroachdb
        steps:
          - 0: [[node-init], [metrics]]
          - default: [[node-join], [metrics]]
  replace:
    strategy: parallel
    phases:
      node-deploy:
        strategy: parallel
        pod: cockroachdb
        steps:
          - default: [[node-join], [metrics]]
  backup:
    strategy: serial
    phases:
      backup:
        strategy: serial
        pod: admin
        steps:
          - default: [[backup]]
  restore:
    strategy: serial
    phases:
      restore:
        strategy: serial
        pod: admin
        steps:
          - 0: [[restore]]
  update:
    strategy: serial
    phases:
      node-deploy:
        strategy: serial
        pod: cockroachdb
        steps:
          - default: [[node-join], [metrics]]

INFO  2017-07-17 16:40:07,216 [Test worker] com.mesosphere.sdk.scheduler.DefaultScheduler:fixLastDeploymentType(315): Fixing last deployment type
INFO  2017-07-17 16:40:07,220 [Test worker] com.mesosphere.sdk.scheduler.DefaultScheduler:getPlans(277): Getting plans
INFO  2017-07-17 16:40:07,238 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-0, with tasks: [node-join]
INFO  2017-07-17 16:40:07,247 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-0-node-init, cockroachdb-0-node-join, cockroachdb-0-metrics]
WARN  2017-07-17 16:40:07,253 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-0-node-join at: Tasks/cockroachdb-0-node-join/TaskInfo
INFO  2017-07-17 16:40:07,262 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-0:[node-join]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,263 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-0, with tasks: [metrics]
INFO  2017-07-17 16:40:07,264 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-0-node-init, cockroachdb-0-node-join, cockroachdb-0-metrics]
WARN  2017-07-17 16:40:07,265 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-0-metrics at: Tasks/cockroachdb-0-metrics/TaskInfo
INFO  2017-07-17 16:40:07,266 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-0:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,266 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-1, with tasks: [node-join]
INFO  2017-07-17 16:40:07,267 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-1-node-init, cockroachdb-1-node-join, cockroachdb-1-metrics]
WARN  2017-07-17 16:40:07,268 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-1-node-join at: Tasks/cockroachdb-1-node-join/TaskInfo
INFO  2017-07-17 16:40:07,271 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-1:[node-join]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,273 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-1, with tasks: [metrics]
INFO  2017-07-17 16:40:07,273 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-1-node-init, cockroachdb-1-node-join, cockroachdb-1-metrics]
WARN  2017-07-17 16:40:07,275 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-1-metrics at: Tasks/cockroachdb-1-metrics/TaskInfo
INFO  2017-07-17 16:40:07,276 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-1:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,291 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-0, with tasks: [node-join]
INFO  2017-07-17 16:40:07,292 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-0-node-init, cockroachdb-0-node-join, cockroachdb-0-metrics]
WARN  2017-07-17 16:40:07,294 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-0-node-join at: Tasks/cockroachdb-0-node-join/TaskInfo
INFO  2017-07-17 16:40:07,295 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-0:[node-join]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,296 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-0, with tasks: [metrics]
INFO  2017-07-17 16:40:07,298 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-0-node-init, cockroachdb-0-node-join, cockroachdb-0-metrics]
WARN  2017-07-17 16:40:07,301 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-0-metrics at: Tasks/cockroachdb-0-metrics/TaskInfo
INFO  2017-07-17 16:40:07,302 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-0:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,303 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-1, with tasks: [node-join]
INFO  2017-07-17 16:40:07,304 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-1-node-init, cockroachdb-1-node-join, cockroachdb-1-metrics]
WARN  2017-07-17 16:40:07,306 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-1-node-join at: Tasks/cockroachdb-1-node-join/TaskInfo
INFO  2017-07-17 16:40:07,307 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-1:[node-join]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,308 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-1, with tasks: [metrics]
INFO  2017-07-17 16:40:07,309 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-1-node-init, cockroachdb-1-node-join, cockroachdb-1-metrics]
WARN  2017-07-17 16:40:07,310 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-1-metrics at: Tasks/cockroachdb-1-metrics/TaskInfo
INFO  2017-07-17 16:40:07,311 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-1:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,313 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: admin-0, with tasks: [backup]
INFO  2017-07-17 16:40:07,317 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [admin-0-backup, admin-0-restore]
WARN  2017-07-17 16:40:07,318 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: admin-0-backup at: Tasks/admin-0-backup/TaskInfo
INFO  2017-07-17 16:40:07,319 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): admin-0:[backup]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,319 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: admin-1, with tasks: [backup]
INFO  2017-07-17 16:40:07,320 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [admin-1-backup, admin-1-restore]
WARN  2017-07-17 16:40:07,321 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: admin-1-backup at: Tasks/admin-1-backup/TaskInfo
INFO  2017-07-17 16:40:07,322 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): admin-1:[backup]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,323 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: admin-0, with tasks: [restore]
INFO  2017-07-17 16:40:07,323 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [admin-0-backup, admin-0-restore]
WARN  2017-07-17 16:40:07,324 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: admin-0-restore at: Tasks/admin-0-restore/TaskInfo
INFO  2017-07-17 16:40:07,325 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): admin-0:[restore]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,326 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-0, with tasks: [node-init]
INFO  2017-07-17 16:40:07,326 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-0-node-init, cockroachdb-0-node-join, cockroachdb-0-metrics]
WARN  2017-07-17 16:40:07,327 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-0-node-init at: Tasks/cockroachdb-0-node-init/TaskInfo
INFO  2017-07-17 16:40:07,328 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-0:[node-init]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,328 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-0, with tasks: [metrics]
INFO  2017-07-17 16:40:07,329 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-0-node-init, cockroachdb-0-node-join, cockroachdb-0-metrics]
WARN  2017-07-17 16:40:07,329 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-0-metrics at: Tasks/cockroachdb-0-metrics/TaskInfo
INFO  2017-07-17 16:40:07,330 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-0:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,331 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-1, with tasks: [node-join]
INFO  2017-07-17 16:40:07,331 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-1-node-init, cockroachdb-1-node-join, cockroachdb-1-metrics]
WARN  2017-07-17 16:40:07,332 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-1-node-join at: Tasks/cockroachdb-1-node-join/TaskInfo
INFO  2017-07-17 16:40:07,333 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-1:[node-join]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,333 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-1, with tasks: [metrics]
INFO  2017-07-17 16:40:07,334 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-1-node-init, cockroachdb-1-node-join, cockroachdb-1-metrics]
WARN  2017-07-17 16:40:07,335 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-1-metrics at: Tasks/cockroachdb-1-metrics/TaskInfo
INFO  2017-07-17 16:40:07,336 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-1:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,366 [Test worker] com.mesosphere.sdk.scheduler.DefaultScheduler:updateConfig(516): Updating config with 5 validators...
INFO  2017-07-17 16:40:07,379 [Test worker] com.mesosphere.sdk.config.DefaultConfigurationUpdater:updateConfiguration(76): New prospective config:
{
  "name" : "cockroachdb",
  "role" : "cockroachdb-role",
  "principal" : "cockroachdb-principal",
  "api-port" : 8080,
  "web-url" : null,
  "zookeeper" : "master.mesos:2181",
  "pod-specs" : [ {
    "type" : "cockroachdb",
    "user" : null,
    "count" : 2,
    "image" : null,
    "networks" : [ ],
    "rlimits" : [ ],
    "uris" : [ "", "", "executor-test-uri" ],
    "task-specs" : [ {
      "name" : "node-init",
      "goal" : "RUNNING",
      "resource-set" : {
        "id" : "server-resources",
        "resource-specifications" : [ {
          "@type" : "DefaultResourceSpec",
          "name" : "cpus",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 0.1
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
          "role" : "cockroachdb-role",
          "pre-reserved-role" : "*",
          "principal" : "cockroachdb-principal",
          "envKey" : null
        }, {
          "@type" : "DefaultResourceSpec",
          "name" : "mem",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 512.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
          "role" : "cockroachdb-role",
          "pre-reserved-role" : "*",
          "principal" : "cockroachdb-principal",
          "envKey" : null
        }, {
          "@type" : "NamedVIPSpec",
          "value" : {
            "type" : "RANGES",
            "scalar" : null,
            "ranges" : {
              "range" : [ {
                "begin" : 8123,
                "end" : 8123
              } ]
            },
            "set" : null,
            "text" : null
          },
          "role" : "cockroachdb-role",
          "pre-reserved-role" : "*",
          "principal" : "cockroachdb-principal",
          "env-key" : null,
          "port-name" : "http",
          "protocol" : "tcp",
          "visibility" : "EXTERNAL",
          "vip-name" : "http",
          "vip-port" : 80,
          "networkNames" : [ ],
          "name" : "ports"
        }, {
          "@type" : "NamedVIPSpec",
          "value" : {
            "type" : "RANGES",
            "scalar" : null,
            "ranges" : {
              "range" : [ {
                "begin" : 26257,
                "end" : 26257
              } ]
            },
            "set" : null,
            "text" : null
          },
          "role" : "cockroachdb-role",
          "pre-reserved-role" : "*",
          "principal" : "cockroachdb-principal",
          "env-key" : null,
          "port-name" : "pg",
          "protocol" : "tcp",
          "visibility" : "EXTERNAL",
          "vip-name" : "pg",
          "vip-port" : 26257,
          "networkNames" : [ ],
          "name" : "ports"
        } ],
        "volume-specifications" : [ {
          "@type" : "DefaultVolumeSpec",
          "type" : "ROOT",
          "container-path" : "cockroach-data",
          "name" : "disk",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 5000.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
          "role" : "cockroachdb-role",
          "pre-reserved-role" : "*",
          "principal" : "cockroachdb-principal",
          "envKey" : "DISK_SIZE"
        } ],
        "role" : "cockroachdb-role",
        "principal" : "cockroachdb-principal"
      },
      "command-spec" : {
        "value" : "./bootstrap && chmod +x $MESOS_SANDBOX/start.sh && ln -s $MESOS_SANDBOX//cockroach cockroach && $MESOS_SANDBOX/start.sh",
        "environment" : {
          "COCKROACH_VERSION" : ""
        }
      },
      "health-check-spec" : {
        "command" : "curl -sf localhost:$PORT_HTTP/_admin/v1/health >/dev/null 2>/dev/null",
        "max-consecutive-failures" : 3,
        "delay" : 0,
        "interval" : 120,
        "timeout" : 10,
        "gracePeriod" : 30
      },
      "readiness-check-spec" : {
        "command" : "curl -sf localhost:$PORT_HTTP/_admin/v1/health >/dev/null 2>/dev/null",
        "delay" : 5,
        "interval" : 10,
        "timeout" : 300
      },
      "config-files" : [ {
        "name" : "start",
        "relative-path" : "start.sh",
        "template-content" : "#!/bin/bash\n\necho \"--------------------\"\necho \"STARTING COCKROACHDB\"\necho \"--------------------\"\n\necho \"Looks like there are no CockroachDB nodes running, starting first node...\"\n\necho \"-----------------------\"\necho \"GENERATING CERTIFICATES\"\necho \"-----------------------\"\n\n# Create directories for certificates\nmkdir certs\nmkdir my-safe-directory\n\n# Create the CA key pair\n$MESOS_SANDBOX/$COCKROACH_VERSION/cockroach cert create-ca \\\n    --certs-dir=certs \\\n    --ca-key=my-safe-directory/ca.key\n\n# Create a client key pair for the root user\n$MESOS_SANDBOX/$COCKROACH_VERSION/cockroach cert create-client root \\\n    --certs-dir=certs \\\n    --ca-key=my-safe-directory/ca.key\n\n# Create a key pair for the first node\n$MESOS_SANDBOX/$COCKROACH_VERSION/cockroach cert create-node \\\n    localhost \\\n    $(hostname) \\\n    --certs-dir=certs \\\n    --ca-key=my-safe-directory/ca.key\n\n# Start CockroachDB server\n$MESOS_SANDBOX/$COCKROACH_VERSION/cockroach start \\\n    --logtostderr \\\n    --insecure \\\n    --http-port=$PORT_HTTP \\\n    --port=$PORT_PG\n"
      } ],
      "discovery-spec" : null
    }, {
      "name" : "node-join",
      "goal" : "RUNNING",
      "resource-set" : {
        "id" : "server-resources",
        "resource-specifications" : [ {
          "@type" : "DefaultResourceSpec",
          "name" : "cpus",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 0.1
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
          "role" : "cockroachdb-role",
          "pre-reserved-role" : "*",
          "principal" : "cockroachdb-principal",
          "envKey" : null
        }, {
          "@type" : "DefaultResourceSpec",
          "name" : "mem",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 512.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
          "role" : "cockroachdb-role",
          "pre-reserved-role" : "*",
          "principal" : "cockroachdb-principal",
          "envKey" : null
        }, {
          "@type" : "NamedVIPSpec",
          "value" : {
            "type" : "RANGES",
            "scalar" : null,
            "ranges" : {
              "range" : [ {
                "begin" : 8123,
                "end" : 8123
              } ]
            },
            "set" : null,
            "text" : null
          },
          "role" : "cockroachdb-role",
          "pre-reserved-role" : "*",
          "principal" : "cockroachdb-principal",
          "env-key" : null,
          "port-name" : "http",
          "protocol" : "tcp",
          "visibility" : "EXTERNAL",
          "vip-name" : "http",
          "vip-port" : 80,
          "networkNames" : [ ],
          "name" : "ports"
        }, {
          "@type" : "NamedVIPSpec",
          "value" : {
            "type" : "RANGES",
            "scalar" : null,
            "ranges" : {
              "range" : [ {
                "begin" : 26257,
                "end" : 26257
              } ]
            },
            "set" : null,
            "text" : null
          },
          "role" : "cockroachdb-role",
          "pre-reserved-role" : "*",
          "principal" : "cockroachdb-principal",
          "env-key" : null,
          "port-name" : "pg",
          "protocol" : "tcp",
          "visibility" : "EXTERNAL",
          "vip-name" : "pg",
          "vip-port" : 26257,
          "networkNames" : [ ],
          "name" : "ports"
        } ],
        "volume-specifications" : [ {
          "@type" : "DefaultVolumeSpec",
          "type" : "ROOT",
          "container-path" : "cockroach-data",
          "name" : "disk",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 5000.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
          "role" : "cockroachdb-role",
          "pre-reserved-role" : "*",
          "principal" : "cockroachdb-principal",
          "envKey" : "DISK_SIZE"
        } ],
        "role" : "cockroachdb-role",
        "principal" : "cockroachdb-principal"
      },
      "command-spec" : {
        "value" : "./bootstrap && chmod +x $MESOS_SANDBOX/join.sh && ln -s $MESOS_SANDBOX//cockroach cockroach && $MESOS_SANDBOX/join.sh",
        "environment" : {
          "COCKROACH_VERSION" : ""
        }
      },
      "health-check-spec" : {
        "command" : "curl -sf localhost:$PORT_HTTP/_admin/v1/health >/dev/null 2>/dev/null",
        "max-consecutive-failures" : 3,
        "delay" : 0,
        "interval" : 120,
        "timeout" : 10,
        "gracePeriod" : 30
      },
      "readiness-check-spec" : {
        "command" : "curl -sf localhost:$PORT_HTTP/_admin/v1/health >/dev/null 2>/dev/null",
        "delay" : 5,
        "interval" : 10,
        "timeout" : 300
      },
      "config-files" : [ {
        "name" : "join",
        "relative-path" : "join.sh",
        "template-content" : "#!/bin/bash\n\necho \"--------------------\"\necho \"JOINING COCKROACHDB\"\necho \"--------------------\"\n\necho \"Looks like there's already at least one other CockroachDB node running, connecting new node to the cluster...\"\n\n# Start CockroachDB server (join existing cluster)\n$MESOS_SANDBOX/$COCKROACH_VERSION/cockroach start \\\n    --insecure \\\n    --logtostderr \\\n    --http-port=$PORT_HTTP \\\n    --port=$PORT_PG \\\n    --join=\"pg.cockroachdb.l4lb.thisdcos.directory:26257\"\n"
      } ],
      "discovery-spec" : null
    }, {
      "name" : "metrics",
      "goal" : "RUNNING",
      "resource-set" : {
        "id" : "sidecar-resources",
        "resource-specifications" : [ {
          "@type" : "DefaultResourceSpec",
          "name" : "cpus",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 0.1
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
          "role" : "cockroachdb-role",
          "pre-reserved-role" : "*",
          "principal" : "cockroachdb-principal",
          "envKey" : null
        }, {
          "@type" : "DefaultResourceSpec",
          "name" : "mem",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 512.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
          "role" : "cockroachdb-role",
          "pre-reserved-role" : "*",
          "principal" : "cockroachdb-principal",
          "envKey" : null
        } ],
        "volume-specifications" : [ ],
        "role" : "cockroachdb-role",
        "principal" : "cockroachdb-principal"
      },
      "command-spec" : {
        "value" : "docker run -e PORT_HTTP=8123 -e STATSD_UDP_HOST=$STATSD_UDP_HOST -e STATSD_UDP_PORT=$STATSD_UDP_PORT -e PYTHONUNBUFFERED=1 --network='host' sammisthemannis/cockroach-statsd:1.1",
        "environment" : { }
      },
      "health-check-spec" : null,
      "readiness-check-spec" : null,
      "config-files" : [ ],
      "discovery-spec" : null
    } ],
    "placement-rule" : null,
    "volumes" : [ ],
    "pre-reserved-role" : "*",
    "secrets" : [ ]
  }, {
    "type" : "admin",
    "user" : null,
    "count" : 2,
    "image" : null,
    "networks" : [ ],
    "rlimits" : [ ],
    "uris" : [ "", "", "executor-test-uri" ],
    "task-specs" : [ {
      "name" : "backup",
      "goal" : "FINISHED",
      "resource-set" : {
        "id" : "admin-resources",
        "resource-specifications" : [ {
          "@type" : "DefaultResourceSpec",
          "name" : "cpus",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 0.1
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
          "role" : "cockroachdb-role",
          "pre-reserved-role" : "*",
          "principal" : "cockroachdb-principal",
          "envKey" : null
        }, {
          "@type" : "DefaultResourceSpec",
          "name" : "mem",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 512.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
          "role" : "cockroachdb-role",
          "pre-reserved-role" : "*",
          "principal" : "cockroachdb-principal",
          "envKey" : null
        } ],
        "volume-specifications" : [ {
          "@type" : "DefaultVolumeSpec",
          "type" : "ROOT",
          "container-path" : "cockroach-backup",
          "name" : "disk",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 5000.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
          "role" : "cockroachdb-role",
          "pre-reserved-role" : "*",
          "principal" : "cockroachdb-principal",
          "envKey" : "DISK_SIZE"
        } ],
        "role" : "cockroachdb-role",
        "principal" : "cockroachdb-principal"
      },
      "command-spec" : {
        "value" : "./bootstrap --resolve=false && chmod +x $MESOS_SANDBOX/aws.sh && mkdir backup && touch backup/$DATABASE_NAME.sql && $MESOS_SANDBOX//cockroach dump $DATABASE_NAME --insecure --host='pg.cockroachdb.l4lb.thisdcos.directory' > backup/$DATABASE_NAME.sql && $MESOS_SANDBOX/aws.sh s3 cp backup/$DATABASE_NAME.sql s3://$S3_BUCKET_NAME/$S3_DIR_PATH/$BACKUP_DIR/",
        "environment" : { }
      },
      "health-check-spec" : null,
      "readiness-check-spec" : null,
      "config-files" : [ {
        "name" : "aws",
        "relative-path" : "aws.sh",
        "template-content" : "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n\n# enable interruption signal handling\ntrap - INT TERM\n\ndocker run --rm \\\n         -t $(tty &>/dev/null && echo \"-i\") \\\n         -e \"AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}\" \\\n         -e \"AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}\" \\\n         -e \"AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}\" \\\n         -v \"$(pwd):/project\" \\\n         mesosphere/aws-cli \\\n         $@\n"
      } ],
      "discovery-spec" : null
    }, {
      "name" : "restore",
      "goal" : "FINISHED",
      "resource-set" : {
        "id" : "admin-resources",
        "resource-specifications" : [ {
          "@type" : "DefaultResourceSpec",
          "name" : "cpus",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 0.1
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
          "role" : "cockroachdb-role",
          "pre-reserved-role" : "*",
          "principal" : "cockroachdb-principal",
          "envKey" : null
        }, {
          "@type" : "DefaultResourceSpec",
          "name" : "mem",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 512.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
          "role" : "cockroachdb-role",
          "pre-reserved-role" : "*",
          "principal" : "cockroachdb-principal",
          "envKey" : null
        } ],
        "volume-specifications" : [ {
          "@type" : "DefaultVolumeSpec",
          "type" : "ROOT",
          "container-path" : "cockroach-backup",
          "name" : "disk",
          "value" : {
            "type" : "SCALAR",
            "scalar" : {
              "value" : 5000.0
            },
            "ranges" : null,
            "set" : null,
            "text" : null
          },
          "role" : "cockroachdb-role",
          "pre-reserved-role" : "*",
          "principal" : "cockroachdb-principal",
          "envKey" : "DISK_SIZE"
        } ],
        "role" : "cockroachdb-role",
        "principal" : "cockroachdb-principal"
      },
      "command-spec" : {
        "value" : "./bootstrap && chmod +x $MESOS_SANDBOX/aws.sh && mkdir restore && $MESOS_SANDBOX/aws.sh s3 cp s3://$S3_BUCKET_NAME/$S3_DIR_PATH/$BACKUP_DIR/$DATABASE_NAME.sql restore/ && $MESOS_SANDBOX//cockroach sql --insecure --execute=\"CREATE DATABASE IF NOT EXISTS $DATABASE_NAME\" --host='pg.cockroachdb.l4lb.thisdcos.directory' && $MESOS_SANDBOX//cockroach sql --database=$DATABASE_NAME --insecure --host='pg.cockroachdb.l4lb.thisdcos.directory' < restore/$DATABASE_NAME.sql",
        "environment" : { }
      },
      "health-check-spec" : null,
      "readiness-check-spec" : null,
      "config-files" : [ {
        "name" : "aws",
        "relative-path" : "aws.sh",
        "template-content" : "#!/usr/bin/env bash\n\nset -o errexit\nset -o nounset\nset -o pipefail\n\n# enable interruption signal handling\ntrap - INT TERM\n\ndocker run --rm \\\n         -t $(tty &>/dev/null && echo \"-i\") \\\n         -e \"AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}\" \\\n         -e \"AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}\" \\\n         -e \"AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}\" \\\n         -v \"$(pwd):/project\" \\\n         mesosphere/aws-cli \\\n         $@\n"
      } ],
      "discovery-spec" : null
    } ],
    "placement-rule" : null,
    "volumes" : [ ],
    "pre-reserved-role" : "*",
    "secrets" : [ ]
  } ],
  "replacement-failure-policy" : null
}
INFO  2017-07-17 16:40:07,444 [Test worker] com.mesosphere.sdk.config.DefaultConfigurationUpdater:updateConfiguration(86): Skipping config diff: There is no old config target to diff against
INFO  2017-07-17 16:40:07,445 [Test worker] com.mesosphere.sdk.config.DefaultConfigurationUpdater:updateConfiguration(120): Changes detected between current target configuration 'null' and new configuration. Setting target to new configuration.
INFO  2017-07-17 16:40:07,804 [Test worker] com.mesosphere.sdk.config.DefaultConfigurationUpdater:cleanupDuplicateAndUnusedConfigs(210): Config adc18d39-dcfc-4643-a058-a7acebd61b08 : cockroachdb 
INFO  2017-07-17 16:40:07,805 [Test worker] com.mesosphere.sdk.config.DefaultConfigurationUpdater:clearConfigsNotListed(307): Cleaning up 0 unused configs: []
INFO  2017-07-17 16:40:07,808 [Test worker] com.mesosphere.sdk.scheduler.DefaultScheduler:getPlans(277): Getting plans
INFO  2017-07-17 16:40:07,809 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-0, with tasks: [node-join]
INFO  2017-07-17 16:40:07,809 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-0-node-init, cockroachdb-0-node-join, cockroachdb-0-metrics]
WARN  2017-07-17 16:40:07,810 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-0-node-join at: Tasks/cockroachdb-0-node-join/TaskInfo
INFO  2017-07-17 16:40:07,811 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-0:[node-join]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,811 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-0, with tasks: [metrics]
INFO  2017-07-17 16:40:07,812 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-0-node-init, cockroachdb-0-node-join, cockroachdb-0-metrics]
WARN  2017-07-17 16:40:07,813 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-0-metrics at: Tasks/cockroachdb-0-metrics/TaskInfo
INFO  2017-07-17 16:40:07,813 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-0:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,814 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-1, with tasks: [node-join]
INFO  2017-07-17 16:40:07,815 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-1-node-init, cockroachdb-1-node-join, cockroachdb-1-metrics]
WARN  2017-07-17 16:40:07,815 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-1-node-join at: Tasks/cockroachdb-1-node-join/TaskInfo
INFO  2017-07-17 16:40:07,816 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-1:[node-join]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,816 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-1, with tasks: [metrics]
INFO  2017-07-17 16:40:07,817 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-1-node-init, cockroachdb-1-node-join, cockroachdb-1-metrics]
WARN  2017-07-17 16:40:07,817 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-1-metrics at: Tasks/cockroachdb-1-metrics/TaskInfo
INFO  2017-07-17 16:40:07,818 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-1:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,819 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-0, with tasks: [node-join]
INFO  2017-07-17 16:40:07,820 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-0-node-init, cockroachdb-0-node-join, cockroachdb-0-metrics]
WARN  2017-07-17 16:40:07,821 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-0-node-join at: Tasks/cockroachdb-0-node-join/TaskInfo
INFO  2017-07-17 16:40:07,822 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-0:[node-join]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,823 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-0, with tasks: [metrics]
INFO  2017-07-17 16:40:07,824 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-0-node-init, cockroachdb-0-node-join, cockroachdb-0-metrics]
WARN  2017-07-17 16:40:07,824 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-0-metrics at: Tasks/cockroachdb-0-metrics/TaskInfo
INFO  2017-07-17 16:40:07,825 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-0:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,826 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-1, with tasks: [node-join]
INFO  2017-07-17 16:40:07,826 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-1-node-init, cockroachdb-1-node-join, cockroachdb-1-metrics]
WARN  2017-07-17 16:40:07,827 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-1-node-join at: Tasks/cockroachdb-1-node-join/TaskInfo
INFO  2017-07-17 16:40:07,828 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-1:[node-join]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,828 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-1, with tasks: [metrics]
INFO  2017-07-17 16:40:07,829 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-1-node-init, cockroachdb-1-node-join, cockroachdb-1-metrics]
WARN  2017-07-17 16:40:07,830 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-1-metrics at: Tasks/cockroachdb-1-metrics/TaskInfo
INFO  2017-07-17 16:40:07,831 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-1:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,832 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: admin-0, with tasks: [backup]
INFO  2017-07-17 16:40:07,832 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [admin-0-backup, admin-0-restore]
WARN  2017-07-17 16:40:07,833 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: admin-0-backup at: Tasks/admin-0-backup/TaskInfo
INFO  2017-07-17 16:40:07,833 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): admin-0:[backup]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,834 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: admin-1, with tasks: [backup]
INFO  2017-07-17 16:40:07,835 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [admin-1-backup, admin-1-restore]
WARN  2017-07-17 16:40:07,835 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: admin-1-backup at: Tasks/admin-1-backup/TaskInfo
INFO  2017-07-17 16:40:07,836 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): admin-1:[backup]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,837 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: admin-0, with tasks: [restore]
INFO  2017-07-17 16:40:07,838 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [admin-0-backup, admin-0-restore]
WARN  2017-07-17 16:40:07,838 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: admin-0-restore at: Tasks/admin-0-restore/TaskInfo
INFO  2017-07-17 16:40:07,839 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): admin-0:[restore]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,840 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-0, with tasks: [node-init]
INFO  2017-07-17 16:40:07,840 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-0-node-init, cockroachdb-0-node-join, cockroachdb-0-metrics]
WARN  2017-07-17 16:40:07,841 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-0-node-init at: Tasks/cockroachdb-0-node-init/TaskInfo
INFO  2017-07-17 16:40:07,841 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-0:[node-init]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,842 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-0, with tasks: [metrics]
INFO  2017-07-17 16:40:07,842 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-0-node-init, cockroachdb-0-node-join, cockroachdb-0-metrics]
WARN  2017-07-17 16:40:07,843 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-0-metrics at: Tasks/cockroachdb-0-metrics/TaskInfo
INFO  2017-07-17 16:40:07,845 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-0:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,845 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-1, with tasks: [node-join]
INFO  2017-07-17 16:40:07,846 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-1-node-init, cockroachdb-1-node-join, cockroachdb-1-metrics]
WARN  2017-07-17 16:40:07,846 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-1-node-join at: Tasks/cockroachdb-1-node-join/TaskInfo
INFO  2017-07-17 16:40:07,847 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-1:[node-join]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,848 [Test worker] com.mesosphere.sdk.scheduler.plan.DefaultStepFactory:getStep(39): Generating step for pod: cockroachdb-1, with tasks: [metrics]
INFO  2017-07-17 16:40:07,848 [Test worker] com.mesosphere.sdk.offer.TaskUtils:getTaskNames(72): PodInstance tasks: [cockroachdb-1-node-init, cockroachdb-1-node-join, cockroachdb-1-metrics]
WARN  2017-07-17 16:40:07,849 [Test worker] com.mesosphere.sdk.state.DefaultStateStore:fetchTask(243): No TaskInfo found for the requested name: cockroachdb-1-metrics at: Tasks/cockroachdb-1-metrics/TaskInfo
INFO  2017-07-17 16:40:07,850 [Test worker] com.mesosphere.sdk.scheduler.plan.DeploymentStep:setStatus(66): cockroachdb-1:[metrics]: changed status from: PENDING to: PENDING (interrupted=false)
INFO  2017-07-17 16:40:07,851 [Test worker] com.mesosphere.sdk.scheduler.DefaultScheduler:overrideDeployPlan(397): Update type: 'DEPLOY', Found update plan: 'true'
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
